#include <std>
// #include <gsl/gsl>

enum class Orientation {direct, reverse};

class Point
{
  float x, y;
public:
  Point (float x, float y){
    this->x = x;
    this->y = y;
  }
  Point (const Point& p) : x(p.x); y(p.y) {  }
  Point& operator= (const Point& p)
  {
    x = p.x;
    y = p.y;
    return *this;
  }
  bool operator== (const Point& p)
  {
    return (x == p.x) && (y == p.y);
  }
  float getX()
  {
    return x;
  }
  float getY()
  {
    return y;
  }
  float distance(Point p)
  {
    float dx, dy;
    dx = p.x - x;
    dy = p.y - y;
    return sqrt(dx*dx + dy*dy);
  }
};

std::vector<Point> closestPair(std::vector<Point>);

